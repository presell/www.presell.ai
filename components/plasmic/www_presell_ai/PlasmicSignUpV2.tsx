// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hgYa2chxELsjCrsDiarb3T
// Component: T64UjHkK2R
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import TextInput from "../../TextInput"; // plasmic-import: whnP1U9nG_tYGg/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_www_presell_ai.module.css"; // plasmic-import: hgYa2chxELsjCrsDiarb3T/projectcss
import sty from "./PlasmicSignUpV2.module.css"; // plasmic-import: T64UjHkK2R/css

import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: Yq9TX85itfl8Tl/icon
import Searchsvg2Icon from "./icons/PlasmicIcon__Searchsvg2"; // plasmic-import: GqlQDoqakuGAAn/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: q1JO1GFRPkcbBU/icon

export type PlasmicSignUpV2__VariantMembers = {};
export type PlasmicSignUpV2__VariantsArgs = {};
type VariantPropType = keyof PlasmicSignUpV2__VariantsArgs;
export const PlasmicSignUpV2__VariantProps = new Array<VariantPropType>();

export type PlasmicSignUpV2__ArgsType = {};
type ArgPropType = keyof PlasmicSignUpV2__ArgsType;
export const PlasmicSignUpV2__ArgProps = new Array<ArgPropType>();

export type PlasmicSignUpV2__OverridesType = {
  root?: p.Flex<"div">;
  form?: p.Flex<"form">;
  button?: p.Flex<"button">;
};

export interface DefaultSignUpV2Props {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicSignUpV2__RenderFunc(props: {
  variants: PlasmicSignUpV2__VariantsArgs;
  args: PlasmicSignUpV2__ArgsType;
  overrides: PlasmicSignUpV2__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicSignUpV2.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicSignUpV2.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicSignUpV2.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__kwat2)}>
            <div className={classNames(projectcss.all, sty.columns__enP5J)}>
              <div className={classNames(projectcss.all, sty.column__tu8Ue)} />

              <div className={classNames(projectcss.all, sty.column__oqBot)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__j4Jye)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8O3I
                      )}
                    >
                      {"Log In"}
                    </div>

                    <ChevronRightIcon
                      className={classNames(projectcss.all, sty.svg__zOwu5)}
                      role={"img"}
                    />
                  </div>
                ) : null}
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__tgOne)}>
              <div className={classNames(projectcss.all, sty.columns___4Fc5G)}>
                <div className={classNames(projectcss.all, sty.column__d4TXj)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tQxJv)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__jUmuv)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tfG2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__u1Un
                        )}
                      >
                        {"1-888-475-4473"}
                      </div>

                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__qWh8F)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__tmw3)}>
            <div className={classNames(projectcss.all, sty.freeBox__lvjS)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wD9Au
                )}
              >
                {"Field Service Management Software"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4TDc4
                )}
              >
                {"Organize your field\n service business"}
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__k6Ti7)}>
                <form
                  data-plasmic-name={"form"}
                  data-plasmic-override={overrides.form}
                  className={classNames(projectcss.all, sty.form)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kLvcv
                    )}
                  >
                    {"TRY JOBBER FREE"}
                  </div>

                  <TextInput
                    className={classNames(
                      "__wab_instance",
                      sty.textInput__jaPvp
                    )}
                    placeholder={"Work Email" as const}
                  />

                  <TextInput
                    className={classNames(
                      "__wab_instance",
                      sty.textInput__oDgFb
                    )}
                    placeholder={"Add a Password" as const}
                  />

                  <button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button
                    )}
                  >
                    {"Start Free Trial"}
                  </button>
                </form>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fv07C
                  )}
                >
                  {"Access all features. No credit card required"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dcJxs
                  )}
                >
                  {
                    "By clicking “Start Free Trial” you agree to receive information from Jobber about our services, plus news and offers.\n You can unsubscribe at any time. You also agree to our Terms of Service and Privacy Policy."
                  }
                </div>
              </div>
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__kkZdX
            )}
          >
            {
              "Rated #1 most affordable and popular by thousands of service pros"
            }
          </div>

          <div className={classNames(projectcss.all, sty.columns__m3VUr)}>
            <div className={classNames(projectcss.all, sty.column__uiOeL)}>
              <div className={classNames(projectcss.all, sty.columns__etfCh)}>
                <div className={classNames(projectcss.all, sty.column__vHCd)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__bTa8C)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"103.62px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/www_presell_ai/images/logoSliderMaidMentorpngpng.png",
                      fullWidth: 105,
                      fullHeight: 44,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__oJNb8)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mb4Lr)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"103.62px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/www_presell_ai/images/logoSliderLawncarlifepngpng.png",
                      fullWidth: 105,
                      fullHeight: 54,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.column___97V4B)}>
              <div className={classNames(projectcss.all, sty.columns__zeHrb)}>
                <div className={classNames(projectcss.all, sty.column___2Sggl)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__y6Z1A)}
                    displayHeight={"100%" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"103.62px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/www_presell_ai/images/logoSliderDmupngpng.png",
                      fullWidth: 105,
                      fullHeight: 104,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__eBxJs)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__u13O)}
                    displayHeight={"42px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"103.62px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/www_presell_ai/images/logoSliderBrolawspngpng.png",
                      fullWidth: 105,
                      fullHeight: 36,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__ciooW)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___1WkYk)}
              displayHeight={"61px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"592px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/divpng.png",
                fullWidth: 593,
                fullHeight: 62,
                aspectRatio: undefined
              }}
            />
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ydyWw
            )}
          >
            {
              "Our features help you organize, manage, and grow your business:\n"
            }
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__tho2F)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__hbgmm)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___1HUvf
              )}
            >
              {
                "Attract new customers by allowing new leads to book through your website or Facebook page."
              }
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___8Dxx3)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__x5NQq)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oRvVd
              )}
            >
              {
                "Send professional looking invoices right from the mobile app. Customize your invoices by adding your branding and send with one-click when the job is done."
              }
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__uUM2)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__zBk2Q)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ioEbm
              )}
            >
              {
                "Manage cash flow and get paid faster with our invoicing and payment features. Batch invoicing, automated follow-ups that remind clients their invoice is due, and an easy, one-click option to pay by credit card online. Jobber also syncs with QuickBooks Online."
              }
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__xwIrV)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__iO4De)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__n4SDo
              )}
            >
              {
                "Deliver a great customer experience with Jobber’s client hub, branded customer communications, customized and automated emails and/or text messages, and custom checklists."
              }
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__gAIb6)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__fryIu)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mPyhZ
              )}
            >
              {
                "Capture all client information in one place while on the go, with full client history, job and customer information, job details, checklists, notes, time tracking, and GPS directions."
              }
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__g9Yvy
            )}
          >
            {
              "“Field service software allows you to focus on running the business, so the workweek isn’t running you.”"
            }
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__zHIr
            )}
          >
            {"-Ryaan Tuttle, Best Handyman Boston"}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "form", "button"],
  form: ["form", "button"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  form: "form";
  button: "button";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSignUpV2__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSignUpV2__VariantsArgs;
    args?: PlasmicSignUpV2__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSignUpV2__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicSignUpV2__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicSignUpV2__ArgProps,
          internalVariantPropNames: PlasmicSignUpV2__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicSignUpV2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSignUpV2";
  } else {
    func.displayName = `PlasmicSignUpV2.${nodeName}`;
  }
  return func;
}

export const PlasmicSignUpV2 = Object.assign(
  // Top-level PlasmicSignUpV2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    form: makeNodeComponent("form"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicSignUpV2
    internalVariantProps: PlasmicSignUpV2__VariantProps,
    internalArgProps: PlasmicSignUpV2__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Signup ",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicSignUpV2;
/* prettier-ignore-end */
