// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hgYa2chxELsjCrsDiarb3T
// Component: 5emHCvwhclA
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import TextInput from "../../TextInput"; // plasmic-import: whnP1U9nG_tYGg/component

import { useScreenVariants as useScreenVariantscvQoPsTOivAmc4 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: CVQoPsTOivAmc4/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_www_presell_ai.module.css"; // plasmic-import: hgYa2chxELsjCrsDiarb3T/projectcss
import sty from "./PlasmicSignUpV22.module.css"; // plasmic-import: 5emHCvwhclA/css

import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: Yq9TX85itfl8Tl/icon
import Searchsvg2Icon from "./icons/PlasmicIcon__Searchsvg2"; // plasmic-import: GqlQDoqakuGAAn/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: q1JO1GFRPkcbBU/icon

export type PlasmicSignUpV22__VariantMembers = {};
export type PlasmicSignUpV22__VariantsArgs = {};
type VariantPropType = keyof PlasmicSignUpV22__VariantsArgs;
export const PlasmicSignUpV22__VariantProps = new Array<VariantPropType>();

export type PlasmicSignUpV22__ArgsType = {};
type ArgPropType = keyof PlasmicSignUpV22__ArgsType;
export const PlasmicSignUpV22__ArgProps = new Array<ArgPropType>();

export type PlasmicSignUpV22__OverridesType = {
  root?: p.Flex<"div">;
  svg?: p.Flex<"svg">;
  form?: p.Flex<"form">;
  textInput?: p.Flex<typeof TextInput>;
  textInput2?: p.Flex<typeof TextInput>;
};

export interface DefaultSignUpV22Props {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSignUpV22__RenderFunc(props: {
  variants: PlasmicSignUpV22__VariantsArgs;
  args: PlasmicSignUpV22__ArgsType;
  overrides: PlasmicSignUpV22__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: true
          ? ({ $props, $state, $queries, $ctx }) => undefined
          : undefined
      },
      {
        path: "textInput2.value",
        type: "private",
        variableType: "text",
        initFunc: true
          ? ({ $props, $state, $queries, $ctx }) => undefined
          : undefined
      }
    ],
    [$props, $ctx]
  );
  const $state = p.useDollarState(stateSpecs, { $props, $ctx, $queries });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantscvQoPsTOivAmc4()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicSignUpV22.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicSignUpV22.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicSignUpV22.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__mx4VT)}>
            <div className={classNames(projectcss.all, sty.columns__iu7X2)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div
                  className={classNames(projectcss.all, sty.column__zgLKv)}
                />
              ) : null}

              <div className={classNames(projectcss.all, sty.column__lhAaS)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__iEq3O)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sNqXd
                        )}
                      >
                        {"Log In"}
                      </div>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9Cuyw
                        )}
                      >
                        <button
                          className={classNames(
                            projectcss.all,
                            projectcss.button,
                            projectcss.__wab_text,
                            sty.button__aTyeH
                          )}
                        >
                          {"Start Free Trial"}
                        </button>
                      </div>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <ChevronRightIcon
                        data-plasmic-name={"svg"}
                        data-plasmic-override={overrides.svg}
                        className={classNames(projectcss.all, sty.svg)}
                        role={"img"}
                      />
                    ) : null}
                  </div>
                ) : null}
              </div>
            </div>

            {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
              <div className={classNames(projectcss.all, sty.freeBox__m282)}>
                <div className={classNames(projectcss.all, sty.columns__vE1Bt)}>
                  <div
                    className={classNames(projectcss.all, sty.column__otBaA)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ymBoN)}
                      displayHeight={"80px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"144px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/www_presell_ai/images/teluguIndiaNewDelhiJulianYu640806Unsplashjpg.jpeg",
                        fullWidth: 1960,
                        fullHeight: 1306,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__tpbMb)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dBbv9
                      )}
                    >
                      {"1-888-475-4473"}
                    </div>
                  </div>
                </div>
              </div>
            ) : null}
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__bMnKh)}>
            <div className={classNames(projectcss.all, sty.freeBox__xC6Nf)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tHCpC
                )}
              >
                {hasVariant(globalVariants, "screen", "mobile")
                  ? "FIELD SERVICE MANAGEMENT SOFTWARE"
                  : "FIELD SERVICE MANAGEMENT SOFTWARE"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yFObR
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#75D718" }}
                  >
                    {"ORGANIZE "}
                  </span>
                  <React.Fragment>
                    {"YOUR FIELD\n SERVICE BUSINESS"}
                  </React.Fragment>
                </React.Fragment>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__oiJ9O)}>
                <form
                  data-plasmic-name={"form"}
                  data-plasmic-override={overrides.form}
                  className={classNames(projectcss.all, sty.form)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mobWs
                    )}
                  >
                    {"TRY JOBBER FREE"}
                  </div>

                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    className={classNames("__wab_instance", sty.textInput)}
                    onChange={(...args) => {
                      p.generateStateOnChangeProp($state, [
                        "textInput",

                        "value"
                      ])((e => e.target?.value).apply(null, args));
                    }}
                    placeholder={"Work Email" as const}
                    value={p.generateStateValueProp($state, [
                      "textInput",

                      "value"
                    ])}
                  />

                  <TextInput
                    data-plasmic-name={"textInput2"}
                    data-plasmic-override={overrides.textInput2}
                    className={classNames("__wab_instance", sty.textInput2)}
                    onChange={(...args) => {
                      p.generateStateOnChangeProp($state, [
                        "textInput2",

                        "value"
                      ])((e => e.target?.value).apply(null, args));
                    }}
                    placeholder={"Add a Password" as const}
                    value={p.generateStateValueProp($state, [
                      "textInput2",

                      "value"
                    ])}
                  />

                  <button
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button__mnAe9
                    )}
                  >
                    {"START FREE TRIAL"}
                  </button>
                </form>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sc7Zo
                  )}
                >
                  {"Access all features. No credit card required"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5KuUj
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "By clicking “Start Free Trial” you agree to receive information from Jobber about our services, plus news and offers.\n You can unsubscribe at any time. You also agree to our "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        color: "#4178DF",
                        textDecorationLine: "underline"
                      }}
                    >
                      {"Terms of Service"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#92B0EE" }}
                    >
                      {" "}
                    </span>
                    <React.Fragment>{"and "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        color: "#4C8FDE",
                        textDecorationLine: "underline"
                      }}
                    >
                      {"Privacy Policy"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#4C8FDE" }}
                    >
                      {"."}
                    </span>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___7Ed1P
            )}
          >
            {
              "Rated #1 most affordable and popular by thousands of service pros"
            }
          </div>

          {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
            <div className={classNames(projectcss.all, sty.freeBox__l7NGy)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div className={classNames(projectcss.all, sty.columns__hw4WO)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobile") ? true : true
                  ) ? (
                    <div
                      className={classNames(projectcss.all, sty.column__irByA)}
                    />
                  ) : null}
                </div>
              ) : null}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
            <div className={classNames(projectcss.all, sty.columns__mRd1U)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div className={classNames(projectcss.all, sty.column__lr66N)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__z3Xvj)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___5LHIt)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__hNve)}
                        displayHeight={"42px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"103.62px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/www_presell_ai/images/logoSliderMaidMentorpngpng.png",
                          fullWidth: 105,
                          fullHeight: 44,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__qQh9A)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__on2Od)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"103.62px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/www_presell_ai/images/logoSliderLawncarlifepngpng.png",
                          fullWidth: 105,
                          fullHeight: 54,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>
                </div>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div className={classNames(projectcss.all, sty.column__b6AD)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__tb6B)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__zrHiv
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__dbqY9)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"103.62px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/www_presell_ai/images/logoSliderDmupngpng.png",
                            fullWidth: 105,
                            fullHeight: 104,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    ) : null}

                    <div
                      className={classNames(projectcss.all, sty.column__qLpWa)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__fcPsg)}
                        displayHeight={"42px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"103.62px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/www_presell_ai/images/logoSliderBrolawspngpng.png",
                          fullWidth: 105,
                          fullHeight: 36,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>
                </div>
              ) : null}
            </div>
          ) : null}
          {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
            <div className={classNames(projectcss.all, sty.freeBox__sfVe)}>
              <div className={classNames(projectcss.all, sty.columns__ybjsw)}>
                {(
                  hasVariant(globalVariants, "screen", "mobile") ? true : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.column__ebFfW)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lCp1)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"180px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/www_presell_ai/images/logoSliderMaidMentorpngpng.png",
                        fullWidth: 105,
                        fullHeight: 44,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
                {(
                  hasVariant(globalVariants, "screen", "mobile") ? true : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.column__ohhRx)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__qBSeH)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"180px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/www_presell_ai/images/logoSliderLawncarlifepngpng.png",
                        fullWidth: 105,
                        fullHeight: 54,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
              </div>

              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <div className={classNames(projectcss.all, sty.freeBox__iwcMz)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__ugi4Q)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___3SGj1
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___4LHiF)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"180px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/www_presell_ai/images/logoSliderDmupngpng.png",
                            fullWidth: 105,
                            fullHeight: 104,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___96Pbt
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__xtijf)}
                          displayHeight={"74px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"200px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/www_presell_ai/images/logoSliderBrolawspngpng.png",
                            fullWidth: 105,
                            fullHeight: 36,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    ) : null}
                  </div>
                </div>
              ) : null}
            </div>
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox__xqWh)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__u5Qqx)}
              displayHeight={"61px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobile")
                  ? ("650px" as const)
                  : ("600px" as const)
              }
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/divpng.png",
                fullWidth: 593,
                fullHeight: 62,
                aspectRatio: undefined
              }}
            />
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___9McYa
            )}
          >
            {
              "Our features help you organize, manage, and grow your business:\n"
            }
          </div>

          {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
            <div className={classNames(projectcss.all, sty.freeBox__o0YGh)} />
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox__akam6)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___1N7Ee)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tWi6B
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Deliver a great customer experience"}
                </span>
                <React.Fragment>
                  {
                    " with Jobber’s client hub, branded customer communications, customized and automated emails and/or text messages, and custom checklists."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__o9Cp9)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__hqwE3)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tQtib
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#000000", fontWeight: 700 }}
                >
                  {"Attract new customers"}
                </span>
                <React.Fragment>
                  {
                    " by allowing new leads to book through your website or Facebook page."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__xJnUi)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__qiYgl)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobile")
                  ? ("29px" as const)
                  : ("auto" as const)
              }
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__gakrn
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Send professional looking invoices"}
                </span>
                <React.Fragment>
                  {
                    " right from the mobile app. Customize your invoices by adding your branding and send with one-click when the job is done."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__s0JXe)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__hjsUn)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fb8Ix
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Manage cash flow and get paid faster"}
                </span>
                <React.Fragment>
                  {
                    " with our invoicing and payment features. Batch invoicing, automated follow-ups that remind clients their invoice is due, and an easy, one-click option to pay by credit card online. Jobber also syncs with QuickBooks Online."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__jpMmd)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__oJGi9)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"20px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/www_presell_ai/images/vectorpng.png",
                fullWidth: 16,
                fullHeight: 13,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___9HBi
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {
                    "Capture all client information in one place while on the go"
                  }
                </span>
                <React.Fragment>
                  {
                    ", with full client history, job and customer information, job details, checklists, notes, time tracking, and GPS directions."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wwbN
            )}
          >
            {hasVariant(globalVariants, "screen", "mobile") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {
                    "“Field service software allows you to focus on running the business, so the workweek isn’t running you.”"
                  }
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {
                    "“Field service software allows you to focus on running the business, so the"
                  }
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {" workweek isn’t running you.”"}
                </span>
              </React.Fragment>
            )}
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__k8Bu6
            )}
          >
            {hasVariant(globalVariants, "screen", "mobile")
              ? "-Ryaan Tuttle, Best Handyman Boston"
              : "-Ryaan Tuttle, Best Handyman Boston"}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "svg", "form", "textInput", "textInput2"],
  svg: ["svg"],
  form: ["form", "textInput", "textInput2"],
  textInput: ["textInput"],
  textInput2: ["textInput2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  svg: "svg";
  form: "form";
  textInput: typeof TextInput;
  textInput2: typeof TextInput;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSignUpV22__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSignUpV22__VariantsArgs;
    args?: PlasmicSignUpV22__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSignUpV22__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicSignUpV22__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicSignUpV22__ArgProps,
          internalVariantPropNames: PlasmicSignUpV22__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicSignUpV22__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSignUpV22";
  } else {
    func.displayName = `PlasmicSignUpV22.${nodeName}`;
  }
  return func;
}

export const PlasmicSignUpV22 = Object.assign(
  // Top-level PlasmicSignUpV22 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    svg: makeNodeComponent("svg"),
    form: makeNodeComponent("form"),
    textInput: makeNodeComponent("textInput"),
    textInput2: makeNodeComponent("textInput2"),

    // Metadata about props expected for PlasmicSignUpV22
    internalVariantProps: PlasmicSignUpV22__VariantProps,
    internalArgProps: PlasmicSignUpV22__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Signup ",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicSignUpV22;
/* prettier-ignore-end */
